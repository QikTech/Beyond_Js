# Object Destructuring

### Object destructuring is a syntax that allows you to unpack properties from an object into variables, making your code cleaner and more readable.

## 1. Basic Destructuring
    
    const user = {
      name: "Prasad",
      age: 30,
      city: "Mumbai"
    };
    
    const { name, age } = user;
    console.log(name); // Prasad
    console.log(age);  // 30

##  2. Renaming Variables

You can rename the destructured variables:
    
    const { name: fullName, city: location } = user;
    console.log(fullName); // Prasad
    console.log(location); // Mumbai

## 3. Default Values

Assign default values when a property might be undefined:
    
    const { country = "India" } = user;
    console.log(country); // India

## 4. Nested Object Destructuring

You can extract values from nested objects too:
    
    const employee = {
      id: 101,
      details: {
        department: "Engineering",
        position: "Developer"
      }
    };
    
    const {
      details: { department, position }
    } = employee;
    
    console.log(department); // Engineering
    
    ⚠️ Note: If details is undefined, nested destructuring will throw an error. Use safe access:
    
    const { details: { department = "" } = {} } = employee;

